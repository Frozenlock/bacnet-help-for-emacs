* Bacnet Help for Emacs

Retrieve bacnet devices and object info from [[http://bacnethelp.com][Bacnet Help]].

** How to use

   You can get an overview of a project if you have the project-id by
   using the =bhelp-get-project-info= function. Make sure to use a
   valid project-id.
   
: (bhelp-get-project-info "1ff63d7644aed72bdd046f60")
: 
: -> (:devices-list
:     ("1234"))


   Once you have selected a device, you can get more detailled info
   with the function =bhelp-get-device-info=, as shown below. 
   
   The data for the various BACnet objects is represented in the
   following form:

:   (key-object-integer
:     (key-object-instance
:       (key-property1 property1 key-property2 property2 ...)
:     )
:   )


:  (bhelp-get-device-info "1ff63d7644aed72bdd046f60" "1234")
:   
:  -> (:update "2012-07-05T22:47:02.342-04:00" :objects
:   	    (:15
:   	     (:0
:   	      (:Object-name "NOTIFICATION CLASS 0" :Present-value nil :Description "NOTIFICATION CLASS 0")
:   	      :1
:   	      (:Object-name "NOTIFICATION CLASS 1" :Present-value nil :Description "NOTIFICATION CLASS 1"))
:   	     :13
:   	     (:0
:   	      (:Units nil :Object-name "" :Present-value 1 :Out-of-service "false" :Description ""))
:
:             .
:             .
:             .
:
:   	     :28
:   	     (:0
:   	      (:Object-name "LOAD CONTROL 0" :Present-value nil :Description "LOAD CONTROL 0")
:   	      :1
:   	      (:Object-name "LOAD CONTROL 1" :Present-value nil :Description "LOAD CONTROL 1")
:   	      :2
:   	      (:Object-name "LOAD CONTROL 2" :Present-value nil :Description "LOAD CONTROL 2")
:   	      :3
:   	      (:Object-name "LOAD CONTROL 3" :Present-value nil :Description "LOAD CONTROL 3")))
:   	    :network-number 0 :name "SimpleServer" :mac-address "[c0,a8,0,3,ba,c0]" :ip-address "192.168.0.3")


   
   From this list, you could select only the Inputs/Outputs with
   =bhelp-get-IOs=.

   To select the first instance (0) of the binary inputs (0), do the
   following:


: (let* ((objects (plist-get 
: 	    (bhelp-get-device-info "1ff63d7644aed72bdd046f60" "1234") :objects))
:        (binary-inputs (plist-get objects :0)));select every binary inputs
:   (plist-get binary-inputs :0));get the first instance


   Finally, to get a list of every available properties for a given
   object instance, such as the one we just got, use the
   =bhelp-get-keys= function.

:    (bhelp-get-keys *)
: 
: -> (:Units :Object-name :Present-value :Out-of-service :Description)

